{"ast":null,"code":"const bookReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_TO_CART':\n      return { ...addToCartFun(state, action)\n      };\n\n    case 'REMOVE_BOOK':\n      return { ...removeFromCartFun()\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default bookReducer;\n\nconst addToCartFun = (state, action) => {\n  const newState = { ...state\n  };\n  const newbook = action.book;\n  newState.addedBooks.push(newbook);\n  return newState;\n};\n\nconst removeFromCartFun = (state, action) => {\n  const newState = { ...state\n  };\n  const remvBookId = action.id;\n  const newbooks = newState.addedBooks.filter(book => book.id !== remvBookId);\n  newState.addedBooks = newbooks;\n  return newState;\n};","map":{"version":3,"sources":["/Users/oti/Documents/QuiLib/src/reducers/bookReducer.ts"],"names":["bookReducer","state","action","type","addToCartFun","removeFromCartFun","newState","newbook","book","addedBooks","push","remvBookId","id","newbooks","filter"],"mappings":"AAQA,MAAMA,WAAW,GAAG,CAACC,KAAD,EAAaC,MAAb,KAA+B;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACD,aAAO,EAAC,GAAGC,YAAY,CAACH,KAAD,EAAOC,MAAP;AAAhB,OAAP;;AACC,SAAK,aAAL;AACD,aAAO,EAAC,GAAGG,iBAAiB;AAArB,OAAP;;AAEC;AACD,aAAOJ,KAAP;AAPD;AASE,CAVH;;AAYE,eAAeD,WAAf;;AAGA,MAAMI,YAAY,GAAC,CAACH,KAAD,EAAaC,MAAb,KAA6B;AAEjD,QAAMI,QAAQ,GAAC,EAAE,GAAGL;AAAL,GAAf;AACG,QAAMM,OAAO,GAACL,MAAM,CAACM,IAArB;AACHF,EAAAA,QAAQ,CAACG,UAAT,CAAoBC,IAApB,CAAyBH,OAAzB;AAEG,SAAOD,QAAP;AAED,CARD;;AAUA,MAAMD,iBAAiB,GAAC,CAACJ,KAAD,EAAaC,MAAb,KAA6B;AAEtD,QAAMI,QAAQ,GAAC,EAAE,GAAGL;AAAL,GAAf;AACG,QAAMU,UAAU,GAACT,MAAM,CAACU,EAAxB;AAEH,QAAMC,QAAQ,GAACP,QAAQ,CAACG,UAAT,CAAoBK,MAApB,CAA4BN,IAAD,IAAcA,IAAI,CAACI,EAAL,KAAYD,UAArD,CAAf;AACGL,EAAAA,QAAQ,CAACG,UAAT,GAAoBI,QAApB;AACH,SAAOP,QAAP;AAEE,CATD","sourcesContent":["import {Book} from 'interfaces'\n\n\ninterface Action{\n\ttype:string;\n\t[extraField:string]:any\n}\n\nconst bookReducer = (state:Book, action:Action) => {\n\tswitch (action.type) {\n\t  case 'ADD_TO_CART':\n\t\treturn {...addToCartFun(state,action) };\n\t  case 'REMOVE_BOOK':\n\t\treturn {...removeFromCartFun() };\n\n\t  default:\n\t\treturn state;\n\t}\n  };\n  \n  export default bookReducer;\n\n\n  const addToCartFun=(state:Book, action:Action)=>{\n\n\tconst newState={ ...state }\n    const newbook=action.book\n\tnewState.addedBooks.push(newbook)\n\n    return newState\n\n  }\n\n  const removeFromCartFun=(state:Book, action:Action)=>{\n\n\tconst newState={ ...state }\n    const remvBookId=action.id\n\t\n\tconst newbooks=newState.addedBooks.filter((book:Book)=> book.id !== remvBookId )\n    newState.addedBooks=newbooks\n\treturn newState\n\n  }"]},"metadata":{},"sourceType":"module"}