{"ast":null,"code":"const bookReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_TO_CART':\n      return { ...addToCartFunc(state, action)\n      };\n\n    case 'REMOVE_BOOK':\n      return { ...removeFromCartFun(state, action)\n      };\n\n    case 'INCREASE_QTY':\n      return { ...incrQtyFun(state, action)\n      };\n\n    case 'REDUCE_QTY':\n      return { ...reduceQtyFun(state, action)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default bookReducer;\n\nconst addToCartFunc = (state, action) => {\n  console.log({\n    dapo: action.book\n  });\n  const newState = { ...state\n  };\n  const newbook = action.book;\n  const bookId = action.book.id;\n  const bookids = newState.addedBooks.map(book => book.id);\n  if (newbook.number_of_purchases >= newbook.available_copies) return newState;\n  const bookIndex = newState.addedBooks.findIndex(book => book.id === bookId);\n\n  if (bookids.includes(newbook.id)) {\n    console.log(newState.addedBooks, bookIndex, newbook);\n    newState.addedBooks[bookIndex].number_of_purchases += 1;\n    return newState;\n  }\n\n  newState.addedBooks[bookIndex].available_copies -= 1;\n  newState.addedBooks.push(newbook);\n  return newState;\n};\n\nconst removeFromCartFun = (state, action) => {\n  const newState = { ...state\n  };\n  const bookId = action.id;\n  const newbooks = newState.addedBooks.filter(book => book.id !== bookId);\n  newState.addedBooks = newbooks;\n  return newState;\n};\n\nconst incrQtyFun = (state, action) => {\n  const newState = { ...state\n  };\n  const bookId = action.id;\n  const bookIndex = newState.addedBooks.findIndex(book => book.id === bookId);\n  newState.addedBooks[bookIndex].number_of_purchases += 1;\n  return newState;\n};\n\nconst reduceQtyFun = (state, action) => {\n  const newState = { ...state\n  };\n  const bookId = action.id;\n  const bookIndex = newState.addedBooks.findIndex(book => book.id === bookId);\n  newState.addedBooks[bookIndex].number_of_purchases -= 1;\n  return newState;\n};","map":{"version":3,"sources":["/Users/oti/Documents/QuiLib/src/reducers/bookReducer.ts"],"names":["bookReducer","state","action","type","addToCartFunc","removeFromCartFun","incrQtyFun","reduceQtyFun","console","log","dapo","book","newState","newbook","bookId","id","bookids","addedBooks","map","number_of_purchases","available_copies","bookIndex","findIndex","includes","push","newbooks","filter"],"mappings":"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","sourcesContent":["import {Book} from 'interfaces'\n\n\ninterface Action{\n\ttype:string;\n\t[extraField:string]:any\n}\n\nconst bookReducer = (state:Book, action:Action) => {\n\tswitch (action.type) {\n\t  case 'ADD_TO_CART':\n\t\treturn {...addToCartFunc(state,action) };\n\t  case 'REMOVE_BOOK':\n\t\treturn {...removeFromCartFun(state,action) };\n\t  case 'INCREASE_QTY':\n\t\treturn {...incrQtyFun(state,action) };\n\t  case 'REDUCE_QTY':\n\t\treturn {...reduceQtyFun(state,action) };\n\n\t  default:\n\t\treturn state;\n\t}\n  };\n  \n  export default bookReducer;\n\n\n  const addToCartFunc=(state:Book, action:Action)=>{\nconsole.log({dapo:action.book})\n\tconst newState={ ...state }\n    const newbook=action.book\n\tconst bookId=action.book.id\n\tconst bookids= newState.addedBooks.map((book:Book)=>book.id)\n    \n\tif(newbook.number_of_purchases >= newbook.available_copies) return newState\n\tconst bookIndex=newState.addedBooks.findIndex((book:Book)=> book.id === bookId )\n\tif(bookids.includes(newbook.id)) {\t\n\t\tconsole.log(newState.addedBooks,bookIndex,newbook)\n\t\tnewState.addedBooks[bookIndex].number_of_purchases += 1\n\t\treturn newState\n\t}\n\tnewState.addedBooks[bookIndex].available_copies -= 1\n\tnewState.addedBooks.push(newbook)\n\n    return newState\n\n  }\n\n  const removeFromCartFun=(state:Book, action:Action)=>{\n\n\tconst newState={ ...state }\n    const bookId=action.id\n\t\n\tconst newbooks=newState.addedBooks.filter((book:Book)=> book.id !== bookId )\n    newState.addedBooks=newbooks\n\treturn newState\n\n  }\n\n  const incrQtyFun=(state:Book, action:Action)=>{\n\n\tconst newState={ ...state }\n    const bookId=action.id\n\t\n\tconst bookIndex=newState.addedBooks.findIndex((book:Book)=> book.id === bookId )\n\tnewState.addedBooks[bookIndex].number_of_purchases += 1\n\treturn newState\n\n  }\n\n  const reduceQtyFun=(state:Book, action:Action)=>{\n\n\tconst newState={ ...state }\n    const bookId=action.id\n\t\n\tconst bookIndex=newState.addedBooks.findIndex((book:Book)=> book.id === bookId )\n\tnewState.addedBooks[bookIndex].number_of_purchases -= 1\n\treturn newState\n\n  }"]},"metadata":{},"sourceType":"module"}