{"ast":null,"code":"// page dots\n(function (window, factory) {\n  // universal module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(require('./core'), require('fizzy-ui-utils'));\n  } else {\n    // browser global\n    factory(window.Flickity, window.fizzyUIUtils);\n  }\n})(typeof window != 'undefined' ? window : this, function factory(Flickity, utils) {\n  // -------------------------- PageDots -------------------------- //\n  function PageDots() {\n    // create holder element\n    this.holder = document.createElement('div');\n    this.holder.className = 'flickity-page-dots'; // create dots, array of elements\n\n    this.dots = [];\n  }\n\n  PageDots.prototype.setDots = function (slidesLength) {\n    // get difference between number of slides and number of dots\n    let delta = slidesLength - this.dots.length;\n\n    if (delta > 0) {\n      this.addDots(delta);\n    } else if (delta < 0) {\n      this.removeDots(-delta);\n    }\n  };\n\n  PageDots.prototype.addDots = function (count) {\n    let newDots = new Array(count).fill().map((item, i) => {\n      let dot = document.createElement('button');\n      dot.setAttribute('type', 'button');\n      let num = i + 1 + this.dots.length;\n      dot.className = 'flickity-page-dot';\n      dot.textContent = `View slide ${num}`;\n      return dot;\n    });\n    this.holder.append(...newDots);\n    this.dots = this.dots.concat(newDots);\n  };\n\n  PageDots.prototype.removeDots = function (count) {\n    // remove from this.dots collection\n    let removeDots = this.dots.splice(this.dots.length - count, count); // remove from DOM\n\n    removeDots.forEach(dot => dot.remove());\n  };\n\n  PageDots.prototype.updateSelected = function (index) {\n    // remove selected class on previous\n    if (this.selectedDot) {\n      this.selectedDot.classList.remove('is-selected');\n      this.selectedDot.removeAttribute('aria-current');\n    } // don't proceed if no dots\n\n\n    if (!this.dots.length) return;\n    this.selectedDot = this.dots[index];\n    this.selectedDot.classList.add('is-selected');\n    this.selectedDot.setAttribute('aria-current', 'step');\n  };\n\n  Flickity.PageDots = PageDots; // -------------------------- Flickity -------------------------- //\n\n  Object.assign(Flickity.defaults, {\n    pageDots: true\n  });\n\n  Flickity.create.pageDots = function () {\n    if (!this.options.pageDots) return;\n    this.pageDots = new PageDots();\n    this.handlePageDotsClick = this.onPageDotsClick.bind(this); // events\n\n    this.on('activate', this.activatePageDots);\n    this.on('select', this.updateSelectedPageDots);\n    this.on('cellChange', this.updatePageDots);\n    this.on('resize', this.updatePageDots);\n    this.on('deactivate', this.deactivatePageDots);\n  };\n\n  let proto = Flickity.prototype;\n\n  proto.activatePageDots = function () {\n    this.pageDots.setDots(this.slides.length);\n    this.focusableElems.push(...this.pageDots.dots);\n    this.pageDots.holder.addEventListener('click', this.handlePageDotsClick);\n    this.element.append(this.pageDots.holder);\n  };\n\n  proto.onPageDotsClick = function (event) {\n    let index = this.pageDots.dots.indexOf(event.target);\n    if (index === -1) return; // only dot clicks\n\n    this.uiChange();\n    this.select(index);\n  };\n\n  proto.updateSelectedPageDots = function () {\n    this.pageDots.updateSelected(this.selectedIndex);\n  };\n\n  proto.updatePageDots = function () {\n    this.pageDots.dots.forEach(dot => {\n      utils.removeFrom(this.focusableElems, dot);\n    });\n    this.pageDots.setDots(this.slides.length);\n    this.focusableElems.push(...this.pageDots.dots);\n  };\n\n  proto.deactivatePageDots = function () {\n    this.pageDots.holder.remove();\n    this.pageDots.holder.removeEventListener('click', this.handlePageDotsClick);\n  }; // -----  ----- //\n\n\n  Flickity.PageDots = PageDots;\n  return Flickity;\n});","map":{"version":3,"sources":["/Users/oti/Documents/QuiLib/node_modules/flickity/js/page-dots.js"],"names":["window","factory","module","exports","require","Flickity","fizzyUIUtils","utils","PageDots","holder","document","createElement","className","dots","prototype","setDots","slidesLength","delta","length","addDots","removeDots","count","newDots","Array","fill","map","item","i","dot","setAttribute","num","textContent","append","concat","splice","forEach","remove","updateSelected","index","selectedDot","classList","removeAttribute","add","Object","assign","defaults","pageDots","create","options","handlePageDotsClick","onPageDotsClick","bind","on","activatePageDots","updateSelectedPageDots","updatePageDots","deactivatePageDots","proto","slides","focusableElems","push","addEventListener","element","event","indexOf","target","uiChange","select","selectedIndex","removeFrom","removeEventListener"],"mappings":"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","sourcesContent":["// page dots\n( function( window, factory ) {\n  // universal module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n        require('./core'),\n        require('fizzy-ui-utils'),\n    );\n  } else {\n    // browser global\n    factory(\n        window.Flickity,\n        window.fizzyUIUtils,\n    );\n  }\n\n}( typeof window != 'undefined' ? window : this, function factory( Flickity, utils ) {\n\n// -------------------------- PageDots -------------------------- //\n\nfunction PageDots() {\n  // create holder element\n  this.holder = document.createElement('div');\n  this.holder.className = 'flickity-page-dots';\n  // create dots, array of elements\n  this.dots = [];\n}\n\nPageDots.prototype.setDots = function( slidesLength ) {\n  // get difference between number of slides and number of dots\n  let delta = slidesLength - this.dots.length;\n  if ( delta > 0 ) {\n    this.addDots( delta );\n  } else if ( delta < 0 ) {\n    this.removeDots( -delta );\n  }\n};\n\nPageDots.prototype.addDots = function( count ) {\n  let newDots = new Array( count ).fill()\n    .map( ( item, i ) => {\n      let dot = document.createElement('button');\n      dot.setAttribute( 'type', 'button' );\n      let num = i + 1 + this.dots.length;\n      dot.className = 'flickity-page-dot';\n      dot.textContent = `View slide ${num}`;\n      return dot;\n    } );\n\n  this.holder.append( ...newDots );\n  this.dots = this.dots.concat( newDots );\n};\n\nPageDots.prototype.removeDots = function( count ) {\n  // remove from this.dots collection\n  let removeDots = this.dots.splice( this.dots.length - count, count );\n  // remove from DOM\n  removeDots.forEach( ( dot ) => dot.remove() );\n};\n\nPageDots.prototype.updateSelected = function( index ) {\n  // remove selected class on previous\n  if ( this.selectedDot ) {\n    this.selectedDot.classList.remove('is-selected');\n    this.selectedDot.removeAttribute('aria-current');\n  }\n  // don't proceed if no dots\n  if ( !this.dots.length ) return;\n\n  this.selectedDot = this.dots[ index ];\n  this.selectedDot.classList.add('is-selected');\n  this.selectedDot.setAttribute( 'aria-current', 'step' );\n};\n\nFlickity.PageDots = PageDots;\n\n// -------------------------- Flickity -------------------------- //\n\nObject.assign( Flickity.defaults, {\n  pageDots: true,\n} );\n\nFlickity.create.pageDots = function() {\n  if ( !this.options.pageDots ) return;\n\n  this.pageDots = new PageDots();\n  this.handlePageDotsClick = this.onPageDotsClick.bind( this );\n  // events\n  this.on( 'activate', this.activatePageDots );\n  this.on( 'select', this.updateSelectedPageDots );\n  this.on( 'cellChange', this.updatePageDots );\n  this.on( 'resize', this.updatePageDots );\n  this.on( 'deactivate', this.deactivatePageDots );\n};\n\nlet proto = Flickity.prototype;\n\nproto.activatePageDots = function() {\n  this.pageDots.setDots( this.slides.length );\n  this.focusableElems.push( ...this.pageDots.dots );\n  this.pageDots.holder.addEventListener( 'click', this.handlePageDotsClick );\n  this.element.append( this.pageDots.holder );\n};\n\nproto.onPageDotsClick = function( event ) {\n  let index = this.pageDots.dots.indexOf( event.target );\n  if ( index === -1 ) return; // only dot clicks\n\n  this.uiChange();\n  this.select( index );\n};\n\nproto.updateSelectedPageDots = function() {\n  this.pageDots.updateSelected( this.selectedIndex );\n};\n\nproto.updatePageDots = function() {\n  this.pageDots.dots.forEach( ( dot ) => {\n    utils.removeFrom( this.focusableElems, dot );\n  } );\n  this.pageDots.setDots( this.slides.length );\n  this.focusableElems.push( ...this.pageDots.dots );\n};\n\nproto.deactivatePageDots = function() {\n  this.pageDots.holder.remove();\n  this.pageDots.holder.removeEventListener( 'click', this.handlePageDotsClick );\n};\n\n// -----  ----- //\n\nFlickity.PageDots = PageDots;\n\nreturn Flickity;\n\n} ) );\n"]},"metadata":{},"sourceType":"script"}