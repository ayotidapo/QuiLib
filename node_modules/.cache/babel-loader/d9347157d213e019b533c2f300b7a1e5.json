{"ast":null,"code":"// player & autoPlay\n(function (window, factory) {\n  // universal module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(require('./core'));\n  } else {\n    // browser global\n    factory(window.Flickity);\n  }\n})(typeof window != 'undefined' ? window : this, function factory(Flickity) {\n  // -------------------------- Player -------------------------- //\n  function Player(autoPlay, onTick) {\n    this.autoPlay = autoPlay;\n    this.onTick = onTick;\n    this.state = 'stopped'; // visibility change event handler\n\n    this.onVisibilityChange = this.visibilityChange.bind(this);\n    this.onVisibilityPlay = this.visibilityPlay.bind(this);\n  } // start play\n\n\n  Player.prototype.play = function () {\n    if (this.state === 'playing') return; // do not play if page is hidden, start playing when page is visible\n\n    let isPageHidden = document.hidden;\n\n    if (isPageHidden) {\n      document.addEventListener('visibilitychange', this.onVisibilityPlay);\n      return;\n    }\n\n    this.state = 'playing'; // listen to visibility change\n\n    document.addEventListener('visibilitychange', this.onVisibilityChange); // start ticking\n\n    this.tick();\n  };\n\n  Player.prototype.tick = function () {\n    // do not tick if not playing\n    if (this.state !== 'playing') return; // default to 3 seconds\n\n    let time = typeof this.autoPlay == 'number' ? this.autoPlay : 3000; // HACK: reset ticks if stopped and started within interval\n\n    this.clear();\n    this.timeout = setTimeout(() => {\n      this.onTick();\n      this.tick();\n    }, time);\n  };\n\n  Player.prototype.stop = function () {\n    this.state = 'stopped';\n    this.clear(); // remove visibility change event\n\n    document.removeEventListener('visibilitychange', this.onVisibilityChange);\n  };\n\n  Player.prototype.clear = function () {\n    clearTimeout(this.timeout);\n  };\n\n  Player.prototype.pause = function () {\n    if (this.state === 'playing') {\n      this.state = 'paused';\n      this.clear();\n    }\n  };\n\n  Player.prototype.unpause = function () {\n    // re-start play if paused\n    if (this.state === 'paused') this.play();\n  }; // pause if page visibility is hidden, unpause if visible\n\n\n  Player.prototype.visibilityChange = function () {\n    let isPageHidden = document.hidden;\n    this[isPageHidden ? 'pause' : 'unpause']();\n  };\n\n  Player.prototype.visibilityPlay = function () {\n    this.play();\n    document.removeEventListener('visibilitychange', this.onVisibilityPlay);\n  }; // -------------------------- Flickity -------------------------- //\n\n\n  Object.assign(Flickity.defaults, {\n    pauseAutoPlayOnHover: true\n  });\n\n  Flickity.create.player = function () {\n    this.player = new Player(this.options.autoPlay, () => {\n      this.next(true);\n    });\n    this.on('activate', this.activatePlayer);\n    this.on('uiChange', this.stopPlayer);\n    this.on('pointerDown', this.stopPlayer);\n    this.on('deactivate', this.deactivatePlayer);\n  };\n\n  let proto = Flickity.prototype;\n\n  proto.activatePlayer = function () {\n    if (!this.options.autoPlay) return;\n    this.player.play();\n    this.element.addEventListener('mouseenter', this);\n  }; // Player API, don't hate the ... thanks I know where the door is\n\n\n  proto.playPlayer = function () {\n    this.player.play();\n  };\n\n  proto.stopPlayer = function () {\n    this.player.stop();\n  };\n\n  proto.pausePlayer = function () {\n    this.player.pause();\n  };\n\n  proto.unpausePlayer = function () {\n    this.player.unpause();\n  };\n\n  proto.deactivatePlayer = function () {\n    this.player.stop();\n    this.element.removeEventListener('mouseenter', this);\n  }; // ----- mouseenter/leave ----- //\n  // pause auto-play on hover\n\n\n  proto.onmouseenter = function () {\n    if (!this.options.pauseAutoPlayOnHover) return;\n    this.player.pause();\n    this.element.addEventListener('mouseleave', this);\n  }; // resume auto-play on hover off\n\n\n  proto.onmouseleave = function () {\n    this.player.unpause();\n    this.element.removeEventListener('mouseleave', this);\n  }; // -----  ----- //\n\n\n  Flickity.Player = Player;\n  return Flickity;\n});","map":{"version":3,"sources":["/Users/oti/Documents/QuiLib/node_modules/flickity/js/player.js"],"names":["window","factory","module","exports","require","Flickity","Player","autoPlay","onTick","state","onVisibilityChange","visibilityChange","bind","onVisibilityPlay","visibilityPlay","prototype","play","isPageHidden","document","hidden","addEventListener","tick","time","clear","timeout","setTimeout","stop","removeEventListener","clearTimeout","pause","unpause","Object","assign","defaults","pauseAutoPlayOnHover","create","player","options","next","on","activatePlayer","stopPlayer","deactivatePlayer","proto","element","playPlayer","pausePlayer","unpausePlayer","onmouseenter","onmouseleave"],"mappings":"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","sourcesContent":["// player & autoPlay\n( function( window, factory ) {\n  // universal module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('./core') );\n  } else {\n    // browser global\n    factory( window.Flickity );\n  }\n\n}( typeof window != 'undefined' ? window : this, function factory( Flickity ) {\n\n// -------------------------- Player -------------------------- //\n\nfunction Player( autoPlay, onTick ) {\n  this.autoPlay = autoPlay;\n  this.onTick = onTick;\n  this.state = 'stopped';\n  // visibility change event handler\n  this.onVisibilityChange = this.visibilityChange.bind( this );\n  this.onVisibilityPlay = this.visibilityPlay.bind( this );\n}\n\n// start play\nPlayer.prototype.play = function() {\n  if ( this.state === 'playing' ) return;\n\n  // do not play if page is hidden, start playing when page is visible\n  let isPageHidden = document.hidden;\n  if ( isPageHidden ) {\n    document.addEventListener( 'visibilitychange', this.onVisibilityPlay );\n    return;\n  }\n\n  this.state = 'playing';\n  // listen to visibility change\n  document.addEventListener( 'visibilitychange', this.onVisibilityChange );\n  // start ticking\n  this.tick();\n};\n\nPlayer.prototype.tick = function() {\n  // do not tick if not playing\n  if ( this.state !== 'playing' ) return;\n\n  // default to 3 seconds\n  let time = typeof this.autoPlay == 'number' ? this.autoPlay : 3000;\n  // HACK: reset ticks if stopped and started within interval\n  this.clear();\n  this.timeout = setTimeout( () => {\n    this.onTick();\n    this.tick();\n  }, time );\n};\n\nPlayer.prototype.stop = function() {\n  this.state = 'stopped';\n  this.clear();\n  // remove visibility change event\n  document.removeEventListener( 'visibilitychange', this.onVisibilityChange );\n};\n\nPlayer.prototype.clear = function() {\n  clearTimeout( this.timeout );\n};\n\nPlayer.prototype.pause = function() {\n  if ( this.state === 'playing' ) {\n    this.state = 'paused';\n    this.clear();\n  }\n};\n\nPlayer.prototype.unpause = function() {\n  // re-start play if paused\n  if ( this.state === 'paused' ) this.play();\n};\n\n// pause if page visibility is hidden, unpause if visible\nPlayer.prototype.visibilityChange = function() {\n  let isPageHidden = document.hidden;\n  this[ isPageHidden ? 'pause' : 'unpause' ]();\n};\n\nPlayer.prototype.visibilityPlay = function() {\n  this.play();\n  document.removeEventListener( 'visibilitychange', this.onVisibilityPlay );\n};\n\n// -------------------------- Flickity -------------------------- //\n\nObject.assign( Flickity.defaults, {\n  pauseAutoPlayOnHover: true,\n} );\n\nFlickity.create.player = function() {\n  this.player = new Player( this.options.autoPlay, () => {\n    this.next( true );\n  } );\n\n  this.on( 'activate', this.activatePlayer );\n  this.on( 'uiChange', this.stopPlayer );\n  this.on( 'pointerDown', this.stopPlayer );\n  this.on( 'deactivate', this.deactivatePlayer );\n};\n\nlet proto = Flickity.prototype;\n\nproto.activatePlayer = function() {\n  if ( !this.options.autoPlay ) return;\n\n  this.player.play();\n  this.element.addEventListener( 'mouseenter', this );\n};\n\n// Player API, don't hate the ... thanks I know where the door is\n\nproto.playPlayer = function() {\n  this.player.play();\n};\n\nproto.stopPlayer = function() {\n  this.player.stop();\n};\n\nproto.pausePlayer = function() {\n  this.player.pause();\n};\n\nproto.unpausePlayer = function() {\n  this.player.unpause();\n};\n\nproto.deactivatePlayer = function() {\n  this.player.stop();\n  this.element.removeEventListener( 'mouseenter', this );\n};\n\n// ----- mouseenter/leave ----- //\n\n// pause auto-play on hover\nproto.onmouseenter = function() {\n  if ( !this.options.pauseAutoPlayOnHover ) return;\n\n  this.player.pause();\n  this.element.addEventListener( 'mouseleave', this );\n};\n\n// resume auto-play on hover off\nproto.onmouseleave = function() {\n  this.player.unpause();\n  this.element.removeEventListener( 'mouseleave', this );\n};\n\n// -----  ----- //\n\nFlickity.Player = Player;\n\nreturn Flickity;\n\n} ) );\n"]},"metadata":{},"sourceType":"script"}