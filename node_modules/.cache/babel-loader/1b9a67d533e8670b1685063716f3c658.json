{"ast":null,"code":"// slide\n(function (window, factory) {\n  // universal module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    window.Flickity = window.Flickity || {};\n    window.Flickity.Slide = factory();\n  }\n})(typeof window != 'undefined' ? window : this, function factory() {\n  function Slide(beginMargin, endMargin, cellAlign) {\n    this.beginMargin = beginMargin;\n    this.endMargin = endMargin;\n    this.cellAlign = cellAlign;\n    this.cells = [];\n    this.outerWidth = 0;\n    this.height = 0;\n  }\n\n  let proto = Slide.prototype;\n\n  proto.addCell = function (cell) {\n    this.cells.push(cell);\n    this.outerWidth += cell.size.outerWidth;\n    this.height = Math.max(cell.size.outerHeight, this.height); // first cell stuff\n\n    if (this.cells.length === 1) {\n      this.x = cell.x; // x comes from first cell\n\n      this.firstMargin = cell.size[this.beginMargin];\n    }\n  };\n\n  proto.updateTarget = function () {\n    let lastCell = this.getLastCell();\n    let lastMargin = lastCell ? lastCell.size[this.endMargin] : 0;\n    let slideWidth = this.outerWidth - (this.firstMargin + lastMargin);\n    this.target = this.x + this.firstMargin + slideWidth * this.cellAlign;\n  };\n\n  proto.getLastCell = function () {\n    return this.cells[this.cells.length - 1];\n  };\n\n  proto.select = function () {\n    this.cells.forEach(cell => cell.select());\n  };\n\n  proto.unselect = function () {\n    this.cells.forEach(cell => cell.unselect());\n  };\n\n  proto.getCellElements = function () {\n    return this.cells.map(cell => cell.element);\n  };\n\n  return Slide;\n});","map":{"version":3,"sources":["/Users/oti/Documents/QuiLib/node_modules/flickity/js/slide.js"],"names":["window","factory","module","exports","Flickity","Slide","beginMargin","endMargin","cellAlign","cells","outerWidth","height","proto","prototype","addCell","cell","push","size","Math","max","outerHeight","length","x","firstMargin","updateTarget","lastCell","getLastCell","lastMargin","slideWidth","target","select","forEach","unselect","getCellElements","map","element"],"mappings":"AAAA;AACE,WAAUA,MAAV,EAAkBC,OAAlB,EAA4B;AAC5B;AACA,MAAK,OAAOC,MAAP,IAAiB,QAAjB,IAA6BA,MAAM,CAACC,OAAzC,EAAmD;AACjD;AACAD,IAAAA,MAAM,CAACC,OAAP,GAAiBF,OAAO,EAAxB;AACD,GAHD,MAGO;AACL;AACAD,IAAAA,MAAM,CAACI,QAAP,GAAkBJ,MAAM,CAACI,QAAP,IAAmB,EAArC;AACAJ,IAAAA,MAAM,CAACI,QAAP,CAAgBC,KAAhB,GAAwBJ,OAAO,EAA/B;AACD;AAEF,CAXC,EAWC,OAAOD,MAAP,IAAiB,WAAjB,GAA+BA,MAA/B,GAAwC,IAXzC,EAW+C,SAASC,OAAT,GAAmB;AAEpE,WAASI,KAAT,CAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,SAAxC,EAAoD;AAClD,SAAKF,WAAL,GAAmBA,WAAnB;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,UAAL,GAAkB,CAAlB;AACA,SAAKC,MAAL,GAAc,CAAd;AACD;;AAED,MAAIC,KAAK,GAAGP,KAAK,CAACQ,SAAlB;;AAEAD,EAAAA,KAAK,CAACE,OAAN,GAAgB,UAAUC,IAAV,EAAiB;AAC/B,SAAKN,KAAL,CAAWO,IAAX,CAAiBD,IAAjB;AACA,SAAKL,UAAL,IAAmBK,IAAI,CAACE,IAAL,CAAUP,UAA7B;AACA,SAAKC,MAAL,GAAcO,IAAI,CAACC,GAAL,CAAUJ,IAAI,CAACE,IAAL,CAAUG,WAApB,EAAiC,KAAKT,MAAtC,CAAd,CAH+B,CAI/B;;AACA,QAAK,KAAKF,KAAL,CAAWY,MAAX,KAAsB,CAA3B,EAA+B;AAC7B,WAAKC,CAAL,GAASP,IAAI,CAACO,CAAd,CAD6B,CACZ;;AACjB,WAAKC,WAAL,GAAmBR,IAAI,CAACE,IAAL,CAAW,KAAKX,WAAhB,CAAnB;AACD;AACF,GATD;;AAWAM,EAAAA,KAAK,CAACY,YAAN,GAAqB,YAAW;AAC9B,QAAIC,QAAQ,GAAG,KAAKC,WAAL,EAAf;AACA,QAAIC,UAAU,GAAGF,QAAQ,GAAGA,QAAQ,CAACR,IAAT,CAAe,KAAKV,SAApB,CAAH,GAAqC,CAA9D;AACA,QAAIqB,UAAU,GAAG,KAAKlB,UAAL,IAAoB,KAAKa,WAAL,GAAmBI,UAAvC,CAAjB;AACA,SAAKE,MAAL,GAAc,KAAKP,CAAL,GAAS,KAAKC,WAAd,GAA4BK,UAAU,GAAG,KAAKpB,SAA5D;AACD,GALD;;AAOAI,EAAAA,KAAK,CAACc,WAAN,GAAoB,YAAW;AAC7B,WAAO,KAAKjB,KAAL,CAAY,KAAKA,KAAL,CAAWY,MAAX,GAAoB,CAAhC,CAAP;AACD,GAFD;;AAIAT,EAAAA,KAAK,CAACkB,MAAN,GAAe,YAAW;AACxB,SAAKrB,KAAL,CAAWsB,OAAX,CAAsBhB,IAAF,IAAYA,IAAI,CAACe,MAAL,EAAhC;AACD,GAFD;;AAIAlB,EAAAA,KAAK,CAACoB,QAAN,GAAiB,YAAW;AAC1B,SAAKvB,KAAL,CAAWsB,OAAX,CAAsBhB,IAAF,IAAYA,IAAI,CAACiB,QAAL,EAAhC;AACD,GAFD;;AAIApB,EAAAA,KAAK,CAACqB,eAAN,GAAwB,YAAW;AACjC,WAAO,KAAKxB,KAAL,CAAWyB,GAAX,CAAkBnB,IAAF,IAAYA,IAAI,CAACoB,OAAjC,CAAP;AACD,GAFD;;AAIA,SAAO9B,KAAP;AAEC,CA5DC,CAAF","sourcesContent":["// slide\n( function( window, factory ) {\n  // universal module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    window.Flickity = window.Flickity || {};\n    window.Flickity.Slide = factory();\n  }\n\n}( typeof window != 'undefined' ? window : this, function factory() {\n\nfunction Slide( beginMargin, endMargin, cellAlign ) {\n  this.beginMargin = beginMargin;\n  this.endMargin = endMargin;\n  this.cellAlign = cellAlign;\n  this.cells = [];\n  this.outerWidth = 0;\n  this.height = 0;\n}\n\nlet proto = Slide.prototype;\n\nproto.addCell = function( cell ) {\n  this.cells.push( cell );\n  this.outerWidth += cell.size.outerWidth;\n  this.height = Math.max( cell.size.outerHeight, this.height );\n  // first cell stuff\n  if ( this.cells.length === 1 ) {\n    this.x = cell.x; // x comes from first cell\n    this.firstMargin = cell.size[ this.beginMargin ];\n  }\n};\n\nproto.updateTarget = function() {\n  let lastCell = this.getLastCell();\n  let lastMargin = lastCell ? lastCell.size[ this.endMargin ] : 0;\n  let slideWidth = this.outerWidth - ( this.firstMargin + lastMargin );\n  this.target = this.x + this.firstMargin + slideWidth * this.cellAlign;\n};\n\nproto.getLastCell = function() {\n  return this.cells[ this.cells.length - 1 ];\n};\n\nproto.select = function() {\n  this.cells.forEach( ( cell ) => cell.select() );\n};\n\nproto.unselect = function() {\n  this.cells.forEach( ( cell ) => cell.unselect() );\n};\n\nproto.getCellElements = function() {\n  return this.cells.map( ( cell ) => cell.element );\n};\n\nreturn Slide;\n\n} ) );\n"]},"metadata":{},"sourceType":"script"}